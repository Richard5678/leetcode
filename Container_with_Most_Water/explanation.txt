The solution presented in maxArea.cc probably seems questionable at first sight, 
Here is how I thought about it:

We are tasked to find the two indeces [i, j] (i < j) such that min(height[i] - height[j]) * (j - i) is maximized.
No that the smaller of height[i] and height[j] plays a dominant role in deciding the value of 
min(height[i] - height[j]) * (j - i).
Suppose height[i] < height[j] (for i < j), then the algorithm will perform i++.
Note that by incrementing i by 1, we effectly removed [i, j - 1] as a candidate for the final solution (since we either perform i++ or j-- in all cases).
Observe that min(height[i] - height[j]) * (j - i) = height[i] * (j - i) > height[i] * (j - 1 - i) = min(height[i] - height[j - 1]) * (j - 1 - i)
which means the water in the container with vertical lines at indeces [i, j - 1] is less than 
the water in the container with the vertical lines at indeces [i, j] which means we can 
garantee that [i, j - 1] is not an optimal solution.
Hence we will always reach optimal point.
